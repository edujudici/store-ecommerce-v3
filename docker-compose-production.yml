version: "3.9"

services:
  web:
    image: nginx:stable-alpine
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./dockerfiles/nginx/conf.d/:/etc/nginx/conf.d/
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    depends_on:
      - app
      - db
      - redis
    networks:
      - app-network
      - proxy

  app:
    build:
      dockerfile: ./dockerfiles/php/Dockerfile
      target: "prod"
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-www}
    image: store-ecommerce-v3-app
    container_name: store-ecommerce_app
    restart: unless-stopped
    volumes:
      - ../shared/storage:/var/www/storage:delegated
      - ../shared/.env:/var/www/.env
    networks:
      - app-network

  db:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-homestead}
      MYSQL_USER: ${DB_USERNAME:-homestead}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      SERVICE_TAGS: ${SERVICE_TAGS:-dev}
      SERVICE_NAME: ${SERVICE_NAME:-db}
    volumes:
      - dbdata:/var/lib/mysql/
      - ./dockerfiles/mysql/my.cnf:/etc/mysql/my.cnf
      - ./dockerfiles/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
      - ./dockerfiles/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network
    command: redis-server --requirepass ${REDIS_PASSWORD}

  supervisor:
    image: store-ecommerce-v3-app
    depends_on:
      - web
      - app
    volumes:
      - ../shared/storage:/var/www/storage:delegated
      - ../shared/.env:/var/www/.env
    networks:
      - app-network
    command: supervisord -c /etc/supervisor/conf.d/store-ecommerce.conf

  npm:
    image: node:current-alpine
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www
    entrypoint: ["npm"]
    networks:
      - app-network

networks:
  proxy:
    name: nginx-proxy
    external: true
  app-network:
    name: store-ecommerce_network
    driver: bridge

volumes:
  dbdata:
    name: store-ecommerce_dbdata
    driver: local
  redis:
    name: store-ecommerce_redis
    driver: "local"
