## Commands
    # insights
        docker-compose exec app php artisan insights

    # unit test artisan command
        docker-compose exec app php artisan test ou docker-compose exec app vendor/bin/phpunit
        docker-compose exec app php artisan test --filter MercadoLivreNotificationServiceTest
        docker-compose exec app php artisan test --group ModelTest
        docker-compose exec app php artisan test --coverage --group ModelTest

    # migrate / migration
    docker-compose exec app php artisan migrate
    docker-compose exec app php artisan make:migration change_column_password_to_users_table --table=users

## Documentation
    fluxograma de compras
        https://www.sebrae.com.br/sites/PortalSebrae/artigos/o-passo-a-passo-das-vendas-virtuais,1156a674acbc5410VgnVCM2000003c74010aRCRD

## Services base
    ecommerce
        https://www.shalonartmdf.com.br/
        https://www.lojaimperiodasartes.com/
        https://www.palaciodaarte.com.br/madeira-mdf
        https://github.com/dacolera/ecommerce

    frete
        https://github.com/diegoliv/Etiquetas-WooCommerce-Correios
        https://github.com/osians/Calcula-o-Frete-dos-Correios/blob/master/calculadoraFrete.php
        http://phpsigep.stavarengo.com/
        http://stavarengo.github.io/php-sigep/
        https://github.com/flyingluscas/correios-php#calcular-pre%C3%A7os-e-prazos

    rastreio de pacote
        https://www.mercadomail.com.br/rastreio/index.html

    nota fiscal
        https://sped-docs.readthedocs.io/pt/latest/iniciando/
        https://github.com/nfephp-org/sped-nfe
        https://imasters.com.br/back-end/emitindo-nfe-com-php
        deprecated - https://github.com/docode-web/laravel-nfe

    Crop Image
        https://fengyuanchen.github.io/cropper/

## Mercado livre
    # Contas
        Aplicativo
            App ID: 114113715204334
            Secret Key: dZxt7tdSjuvYvrBhlHUctkmqalHDgrIF
            URI de redirect *: https://imperiodomdf.com.br/api/ml/auth

        Conta Admin JUDICIEDUARDO
            access_token: APP_USR-114113715204334-032218-64f1035a25d311cb964952faf2f3746e-219258623
            code_tg:       TG-641a80b8e923870001dba158-219258623
            refresh_token: TG-641a80bc32cd5200011fd02a-219258623

        Contas de teste
            Vendedor
            {
                "id": 1336846843,
                "email": "test_user_1359535341@testuser.com",
                "nickname": "TEST_USER_1359535341",
                "site_status": "active",
                "password": "O67FwVSt1q"
            }
            Produtos:
            https://produto.mercadolivre.com.br/MLB-3345582076-item-de-teste-por-favor-no-ofertar-_JM
            https://produto.mercadolivre.com.br/MLB-3449006754-item-de-teste-por-favor-no-ofertar-_JM
            https://produto.mercadolivre.com.br/MLB-3453558114-item-de-teste-por-favor-no-ofertar-_JM

            Comprador
            {
                "id": 1336951986,
                "email": "test_user_173322371@testuser.com",
                "nickname": "TEST_USER_173322371",
                "site_status": "active",
                "password": "h124laAlnu"
            }

## Mercado Pago
    notificação
        https://www.mercadopago.com/mlb/account/webhooks

    documentação completa
        https://www.mercadopago.com.br/developers/pt/guides/localization/payment-methods/
        https://www.mercadopago.com.br/developers/pt/reference/merchant_orders/_merchant_orders_id/get/

    Contas de teste
        Vendedor
        Access token TEST-5252337985945137-022220-04c0a71ee9ef40d58baf16fdf4bb2a30-1078876951
        {
            "id": 1078876951,
            "nickname": "TEST8UBBVPFT",
            "password": "qatest6807",
            "site_status": "active",
            "email": "test_user_74610589@testuser.com"
        }

        comprador
        {
            "id": 1078882145,
            "nickname": "TETE3004285",
            "password": "qatest5260",
            "site_status": "active",
            "email": "test_user_55737184@testuser.com"
        }

## Messages

    # Resposta Compra
        Olá NOME, agradecemos sua compra.
        ============================================================================================
        ATENÇÃO:
        ============================================================================================
        Veja se o anúncio atende às suas necessidades. Após a produção não devolveremos o dinheiro por se tratar de produto personalizado.

        CORES: Poderá haver uma variação na cor da arte visualizada na tela do computador em decorrência das diferentes resoluções de cada monitor.

        Caso o produto atenda às suas necessidades daremos continuidade, por gentileza nos informe:

        1) A data de seu evento (apenas para nosso controle de prazo);
        2) O(s) tema(s) de sua preferência e;
        3) Os dados para personalização de sua arte (nome, idade do aniversariante, data, etc);

        ============================================================================================
        IMPORTANTE:
        ============================================================================================
        1) Lembrando que seu pedido só será produzido após aprovação da arte
        2) Conforme consta do anúncio, o produto adquirido é personalizado, portanto, temos prazo para produção (4 dias)

        ============================================================================================
        em caso de dúvidas, por favor, estamos à disposição por esse canal para quaisquer esclarecimentos.
        ============================================================================================

        Abraços Equipe Império do Mdf

    # Mensagem resposta automatizado
        Pagamento aprovado
        Prezado(a) [NomeComprador],
        Obrigado por comprar conosco através do Mercado Livre. Por favor se o seu produto for personalizado informe o NOME a ser GRAVADO e o MODELO.
        Importante:
        Caso você não responda essa mesnagem em 6 horas ou até o início da produção estaremos confeccionando conforme a imagem do anúncio!
        Em caso de dúvidas ou problemas, por favor, entre em contato via chat de mensagens.

        Acompanhamento do seu pedido:
        Você receberá um novo e-mail a cada evolução no andamento de seu pedido. Caso prefira, você pode acompanhar também pelo site.

        Atenciosamente,

## Uteis
    # Backup database
        # Backup
        docker exec CONTAINER /usr/bin/mysqldump -u imperio --password=PASSWORD ecommerce > backup.mysql

        # Restore
        cat backup.sql | docker exec -i CONTAINER /usr/bin/mysql -u imperio --password=PASSWORD ecommerce

        # Copiando arquivo
        scp user@server:/var/www/backup.sql .

    # Remove all products
        truncate table `products_comment`;
        truncate table `products_exclusive`;
        truncate table `products_related`;
        truncate table `products_specification`;
        truncate table `products`;
        truncate table `categories`;

    # Remove all orders
        truncate table orders_payment;
        truncate table orders_comment;
        truncate table orders_merchant;
        truncate table orders_item;
        truncate table orders_history;
        truncate table orders_address;
        truncate table orders;

    # Fluxo access_token
        gerar api token
        https://developers.mercadolivre.com.br/devcenter

        autorizar
        https://auth.mercadolibre.com/authorization?response_type=code&client_id=504943015795700&redirect_uri=https://imperiodomdf.com.br/api/ml/auth

        codigo gerado + url de redirecionamento
        https://imperiodomdf.com.br/?code=TG-5eda4527d23e6f0006b373d3-331666203

    # Fluxo de compra completo
        Passo 1: Adicionar token referente ao vendedor MERCADO_PAGO_TOKEN
            TEST-5252337985945137-022220-04c0a71ee9ef40d58baf16fdf4bb2a30-1078876951

        Passo 2: Efetuar compra com o e-mail de comprador
            {
                "email": "test_user_55737184@testuser.com",
                "password": "qatest5260"
            }

        Passo 3: Executar uma chamada a API de IPN via Postman (simulando o processo automatizado quando estiver em Live)
            POST http://localhost:8000/api/mp/notifications
            body
            {
                "type": "payment",
                "data": {
                    "id": "1247878067"
                }
            }

        Passo 4: Executar queue work do laravel para processar a requisição
            docker-compose exec app php artisan queue:work --queue=payment --tries=3 --timeout=240
            ou
            docker exec -it app php artisan queue:work --queue=payment --tries=3 --timeout=240

        Passo 5: Pronto, a simulação do mercado pago esta executada com sucesso
            O cliente deve ter seu status em "Pagamento Aprovado"
            O administrador deve ter recebido uma notificação "Pagamento recebido" no e-mai
            O administrador deve ter recebido uma nova notificação no site o o pedido é exibido como "Pago" no painel

    # Teste carregar perguntas local
        Passo 1: Executar uma chamada a API via Postman com protocolo POST
            http://localhost:8082/api/ml/loads/questions

        Passo 2: Executar queue work do laravel para processar a requisição
            docker-compose exec app php artisan queue:work --queue=questions --tries=3 --timeout=240

    # Fluxo de notification
        Base: https://blog.especializati.com.br/aprenda-como-trabalhar-com-eventos-no-laravel/

        Passo 1: Gerar um novo event
        php artisan make:event ContactRegistered

        Passo 2: Gerar um novo listener
        php artisan make:listener SendNewContactNotification --event=ContactRegistered

        Passo 3: Registrar o evento no listen da classe EventServiceProvider

        Passo 4: Gerar uma nova notification
        docker exec -it app php artisan make:notification ContactNotification

        Passo 5: Acionar o evento
        event(new ContactRegistered($request->input('subject')));

    # Fluxo de job
        Base: https://www.itsolutionstuff.com/post/example-of-cron-job-in-laravel-5example.html

        Criar novo job
        docker-compose exec app php artisan make:console DemoCron --command=demo:cron

        Injetar o command no Kernel
        app/Console/Kernel.php

    # Fluxo de Queue
        Base: https://blog.especializati.com.br/queues-no-laravel-filas/

        Criar Novo Job
        docker-compose exec app php artisan make:job AfterSalesMessage

        Definir um nome para queue. Ex: queue-test

        Acessar o servidor e entrar na pasta:
        cd /etc/supervisor/conf.d/

        Criar um novo arquivo com extensão .conf apontando para o mesmo nome da queue. Ex: queue-test

        Executar os comandos para carregar as novas configurações
        supervisorctl reread
        supervisorctl update

        Executar comando para atualizar algum ajuste no fluxo
        supervisorctl restart all

    # Pós venda - exemplo de mensagem
        https://api.mercadolibre.com/messages/packs/4225883428/sellers/132437915
        https://api.mercadolibre.com/messages/packs/4600985462/sellers/132437915
        /orders/4600985462




DashboardRevenueServiceTest
